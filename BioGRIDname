#!/bin/sh
USAGE="USAGE: $0 [-i] [-l] [list of names]
PURPOSE: for each species name (long or short form) given on the command line, output one line with the following info:
	name-from-command-line	BioGRIDname	list of taxonomic IDs associated with the species
If the species on the command line is already an integer, don't touch it, and use NONE as the longer name.
All output columns are tab-separated."

die(){ (echo "$USAGE"; echo "FATAL ERROR: $@")>&2; exit 1; }
warn(){ (echo "WARNING: $@")>&2; }
not(){ if eval "$@"; then return 1; else return 0; fi; }
newlines(){ awk '{for(i=1; i<=NF;i++)print $i}' "$@"; }
parse(){ awk "BEGIN{print $@}" </dev/null; }

SANA_DIR=${SANA_DIR?:"environment variable SANA_DIR needs to be set to main SANA repo directory"}
[ -d $SANA_DIR ] || die "cannot open SANA_DIR repo at <$SANA_DIR>"

IGNORE_CASE=''
LONG=false
while true; do
    case "$1" in
    -i) IGNORE_CASE="-i"; shift ;;
    -l) LONG=true; shift;;
    -*) die "unknown option '$1'";;
    *) break;;
    esac
done

for q
do
    if echo "$q" | grep -q '^[0-9]*$'; then # it's an integer already, don't touch it
	echo "$q	NONE	$q"
    else
	(
	    cd $SANA_DIR/resnik/taxons
	    if $LONG; then
		Q=`echo "$q" | awk '{printf "%s[a-z]*_%s\n", substr($0,1,1), tolower(substr($0,2,1))}'`
		FILE=`ls | grep $IGNORE_CASE "$Q"` # HS -> Homo_sapiens, full BioGRID name
	    else
		Q=`echo "$q" | sed 's/[ 	.]//g' | sed 's/IID//'`
		FILE=`ls | grep $IGNORE_CASE "$Q"` # HS -> HSapiens, my traditional midsize name
	    fi
	    #if [ `echo $FILE | wc -w` -gt 1 ]; then echo "Warning: $q" matches multiple files: $FILE >&2; fi
	    for f in $FILE; do
		echo -n "$q"
		newlines < $f |
		    awk 'BEGIN{F="'"$f"'"; printf "\t%s",F }
		    {for(i=1;i<=NF;i++)printf "\t%s",$i}END{print ""}'
	    done
	)
    fi
done
